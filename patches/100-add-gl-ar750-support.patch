--- a/target/linux/ar71xx/base-files/etc/board.d/01_leds
+++ b/target/linux/ar71xx/base-files/etc/board.d/01_leds
@@ -282,6 +282,10 @@ dlan-pro-1200-ac)
 	ucidef_set_led_gpio "plcw" "dLAN" "devolo:status:dlan" "17" "0"
 	ucidef_set_led_gpio "plcr" "dLAN" "devolo:error:dlan" "16" "0"
 	;;
+gl-ar750)
+    ucidef_set_led_wlan "wlan2g" "WLAN2G" "$board:white:wlan2g" "phy1tpt"
+    ucidef_set_led_wlan "wlan5g" "WLAN5G" "$board:white:wlan5g" "phy0tpt"
+    ;;
 gl-ar150|\
 gl-ar300|\
 gl-ar300m|\
--- a/target/linux/ar71xx/base-files/etc/board.d/02_network
+++ b/target/linux/ar71xx/base-files/etc/board.d/02_network
@@ -335,6 +335,11 @@ ar71xx_setup_interfaces()
 		ucidef_add_switch "switch0" \
 			"0@eth1" "1:lan" "2:lan" "3:lan" "4:lan"
 		;;
+    gl-ar750)
+        ucidef_set_interfaces_lan_wan "eth1.1" "eth0"
+        ucidef_add_switch "switch0" \
+        "0@eth1" "1:lan:2" "2:lan:1"
+        ;;
 	jwap230)
 		ucidef_set_interfaces_lan_wan "eth0" "eth1"
 		ucidef_add_switch "switch0" \
--- a/target/linux/ar71xx/base-files/etc/diag.sh
+++ b/target/linux/ar71xx/base-files/etc/diag.sh
@@ -187,6 +187,9 @@ get_status_led() {
 	esr1750)
 		status_led="$board:amber:power"
 		;;
+    gl-ar750)
+        status_led="$board:white:power"
+		;;
 	esr900)
 		status_led="engenius:amber:power"
 		;;
--- a/target/linux/ar71xx/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
+++ b/target/linux/ar71xx/base-files/etc/hotplug.d/firmware/11-ath10k-caldata
@@ -96,6 +96,7 @@ case "$FIRMWARE" in
 		ath10kcal_extract "art" 20480 2116
 		ath10kcal_patch_mac $(macaddr_add $(cat /sys/class/net/eth1/address) -2)
 		;;
+	gl-ar750 | \
 	tl-wpa8630)
 		ath10kcal_extract "art" 20480 2116
 		ath10kcal_patch_mac $(macaddr_add $(cat /sys/class/net/eth0/address) +1)
--- /dev/null
+++ b/target/linux/ar71xx/base-files/etc/uci-defaults/03_fix_dnsmasq_dhcp
@@ -0,0 +1,32 @@
+#!/bin/sh
+#
+# Copyright (C) 2013 OpenWrt.org
+#
+
+. /lib/functions.sh
+
+config_dnsmasq_dhcp()
+{
+		uci set dhcp.@dhcp[0].force=1
+		uci commit dhcp
+		uci set wireless.radio0.doth=0
+		uci commit wireless
+}
+
+
+
+. /lib/ar71xx.sh
+
+board=$(ar71xx_board_name)
+
+case "$board" in
+	gl-ar750)
+	config_dnsmasq_dhcp
+	;;
+*)
+	;;
+esac
+
+
+exit 0
+
--- a/target/linux/ar71xx/base-files/lib/ar71xx.sh
+++ b/target/linux/ar71xx/base-files/lib/ar71xx.sh
@@ -629,6 +629,9 @@ ar71xx_board_detect() {
 	*"GL-AR300M")
 		name="gl-ar300m"
 		;;
+    *"GL-AR750")
+        name="gl-ar750"
+        ;;
 	*"GL-MIFI")
 		name="gl-mifi"
 		;;
--- a/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
+++ b/target/linux/ar71xx/base-files/lib/upgrade/platform.sh
@@ -239,6 +239,7 @@ platform_check_image() {
 	ew-dorin|\
 	gl-ar150|\
 	gl-ar300m|\
+	gl-ar750|\
 	gl-ar300|\
 	gl-domino|\
 	gl-mifi|\
--- a/target/linux/ar71xx/config-4.4
+++ b/target/linux/ar71xx/config-4.4
@@ -105,6 +105,7 @@ CONFIG_ATH79_MACH_F9K1115V2=y
 CONFIG_ATH79_MACH_GL_AR150=y
 CONFIG_ATH79_MACH_GL_AR300=y
 CONFIG_ATH79_MACH_GL_AR300M=y
+CONFIG_ATH79_MACH_GL_AR750=y
 CONFIG_ATH79_MACH_GL_DOMINO=y
 CONFIG_ATH79_MACH_GL_INET=y
 CONFIG_ATH79_MACH_GL_MIFI=y
--- a/target/linux/ar71xx/files/arch/mips/ath79/Kconfig.openwrt
+++ b/target/linux/ar71xx/files/arch/mips/ath79/Kconfig.openwrt
@@ -691,6 +691,17 @@ config ATH79_MACH_GL_AR300M
 	select ATH79_DEV_USB
 	select ATH79_DEV_WMAC
 
+config ATH79_MACH_GL_AR750
+    bool "GL.iNet GL-AR750 support"
+    select SOC_QCA953X
+    select ATH79_DEV_AP9X_PCI if PCI
+    select ATH79_DEV_ETH
+    select ATH79_DEV_GPIO_BUTTONS
+    select ATH79_DEV_LEDS_GPIO
+    select ATH79_DEV_M25P80
+    select ATH79_DEV_USB
+    select ATH79_DEV_WMAC
+
 config ATH79_MACH_GL_DOMINO
 	bool "DOMINO support"
 	select SOC_AR933X
--- a/target/linux/ar71xx/files/arch/mips/ath79/Makefile
+++ b/target/linux/ar71xx/files/arch/mips/ath79/Makefile
@@ -109,6 +109,7 @@ obj-$(CONFIG_ATH79_MACH_F9K1115V2)		+= m
 obj-$(CONFIG_ATH79_MACH_GL_AR150)		+= mach-gl-ar150.o
 obj-$(CONFIG_ATH79_MACH_GL_AR300)		+= mach-gl-ar300.o
 obj-$(CONFIG_ATH79_MACH_GL_AR300M)		+= mach-gl-ar300m.o
+obj-$(CONFIG_ATH79_MACH_GL_AR750)		+= mach-gl-ar750.o
 obj-$(CONFIG_ATH79_MACH_GL_DOMINO)		+= mach-gl-domino.o
 obj-$(CONFIG_ATH79_MACH_GL_INET)		+= mach-gl-inet.o
 obj-$(CONFIG_ATH79_MACH_GL_MIFI)		+= mach-gl-mifi.o
--- /dev/null
+++ b/target/linux/ar71xx/files/arch/mips/ath79/mach-gl-ar750.c
@@ -0,0 +1,167 @@
+/*
+ *  GLI AR750 board support
+ *
+ *  Copyright (C) 2011 dongyuqi <729650915@qq.com>
+ *  Copyright (C) 2011-2012 Gabor Juhos <juhosg@openwrt.org>
+ *  Copyright (C) 2013 alzhao <alzhao@gmail.com>
+ *  Copyright (C) 2014 Michel Stempin <michel.stempin@wanadoo.fr>
+ *
+ *  This program is free software; you can redistribute it and/or modify it
+ *  under the terms of the GNU General Public License version 2 as published
+ *  by the Free Software Foundation.
+ */
+
+#include <linux/gpio.h>
+#include <linux/pci.h>
+
+#include <asm/mach-ath79/ath79.h>
+#include <asm/mach-ath79/ar71xx_regs.h>
+#include <linux/i2c.h>
+#include <linux/i2c-gpio.h>
+#include <linux/platform_device.h>
+
+#include "common.h"
+#include "dev-ap9x-pci.h"
+#include "dev-eth.h"
+#include "dev-gpio-buttons.h"
+#include "dev-leds-gpio.h"
+#include "dev-m25p80.h"
+#include "dev-usb.h"
+#include "dev-spi.h"
+#include "dev-wmac.h"
+#include "machtypes.h"
+#include "pci.h"
+
+#define GL_AR750_GPIO_USB_POWER		2
+
+#define GL_AR750_GPIO_LED_WLAN2G       14
+#define GL_AR750_GPIO_LED_WLAN5G       13
+#define GL_AR750_GPIO_LED_POWER	12
+
+#define GL_AR750_GPIO_BTN_RESET	3
+#define GL_AR750_GPIO_BTN_RIGHT	0
+
+#define GL_AR750_GPIO_I2C_SCL	16
+#define GL_AR750_GPIO_I2C_SDA	17
+
+#define GL_AR750_KEYS_POLL_INTERVAL        20  /* msecs */
+#define GL_AR750_KEYS_DEBOUNCE_INTERVAL    (3 * GL_AR750_KEYS_POLL_INTERVAL)
+
+#define GL_AR750_MAC0_OFFSET   0
+#define GL_AR750_MAC1_OFFSET   6
+#define GL_AR750_WMAC_CALDATA_OFFSET   0x1000
+#define GL_AR750_PCIE_CALDATA_OFFSET   0x5000
+
+static struct gpio_led gl_ar750_leds_gpio[] __initdata = {
+   {
+        .name           = "gl-ar750:white:power",
+        .gpio           = GL_AR750_GPIO_LED_POWER,
+        .default_state  = LEDS_GPIO_DEFSTATE_KEEP,
+        .active_low     = 1,
+    }, {
+        .name           = "gl-ar750:white:wlan2g",
+        .gpio           = GL_AR750_GPIO_LED_WLAN2G,
+        .active_low     = 1,
+    }, {
+        .name           = "gl-ar750:white:wlan5g",
+        .gpio           = GL_AR750_GPIO_LED_WLAN5G,
+        .active_low     = 1,
+    },
+};
+
+static struct gpio_keys_button gl_ar750_gpio_keys[] __initdata = {
+    {
+        .desc                   = "reset",
+        .type                   = EV_KEY,
+        .code                   = KEY_RESTART,
+        .debounce_interval      = GL_AR750_KEYS_DEBOUNCE_INTERVAL,
+        .gpio                   = GL_AR750_GPIO_BTN_RESET,
+        .active_low             = 1,
+       }, {
+        .desc                   = "right",
+        .type                   = EV_KEY,
+        .code                   = BTN_0,
+        .debounce_interval      = GL_AR750_KEYS_DEBOUNCE_INTERVAL,
+        .gpio                   = GL_AR750_GPIO_BTN_RIGHT,
+        .active_low             = 1,
+       },
+};
+
+static struct spi_board_info gl_ar750_spi_info[] = {
+    {
+        .bus_num    = 0,
+        .chip_select    = 0,
+        .max_speed_hz   = 25000000,
+        .modalias   = "m25p80",
+        .platform_data  = NULL,
+    },
+};
+
+static struct ath79_spi_platform_data gl_ar750_spi_data = {
+    .bus_num        = 0,
+    .num_chipselect     = 2,
+};
+
+static struct i2c_gpio_platform_data gl_ar750_i2c_gpio_data = {
+	.sda_pin	= GL_AR750_GPIO_I2C_SDA,
+	.scl_pin	= GL_AR750_GPIO_I2C_SCL,
+};
+
+static struct platform_device gl_ar750_i2c_gpio_device = {
+	.name		= "i2c-gpio",
+	.id		= 0,
+	.dev = {
+		.platform_data  = &gl_ar750_i2c_gpio_data,
+	}
+};
+
+
+static void __init gl_ar750_setup(void)
+{
+    u8 *art = (u8 *) KSEG1ADDR(0x1f050000);
+    u8 tmpmac[ETH_ALEN];
+
+    ath79_gpio_function_enable(AR934X_GPIO_FUNC_JTAG_DISABLE);
+    ath79_register_spi(&gl_ar750_spi_data, gl_ar750_spi_info, 2);
+
+    /* register gpio LEDs and keys */
+    ath79_register_leds_gpio(-1, ARRAY_SIZE(gl_ar750_leds_gpio),
+                 gl_ar750_leds_gpio);
+    ath79_register_gpio_keys_polled(-1, GL_AR750_KEYS_POLL_INTERVAL,
+                    ARRAY_SIZE(gl_ar750_gpio_keys),
+                    gl_ar750_gpio_keys);
+	gpio_request_one(GL_AR750_GPIO_USB_POWER,
+                    GPIOF_OUT_INIT_HIGH | GPIOF_EXPORT_DIR_FIXED,
+                    "gl-ar750:usbpow");
+
+    ath79_register_mdio(0, 0x0);
+
+    /* WAN */
+    ath79_init_mac(ath79_eth0_data.mac_addr, art + GL_AR750_MAC0_OFFSET, 0);
+    ath79_eth0_data.phy_if_mode = PHY_INTERFACE_MODE_MII;
+    ath79_eth0_data.speed = SPEED_100;
+    ath79_eth0_data.duplex = DUPLEX_FULL;
+    ath79_eth0_data.phy_mask = BIT(4);
+    ath79_register_eth(0);
+
+    /* LAN */
+    ath79_init_mac(ath79_eth1_data.mac_addr, art + GL_AR750_MAC0_OFFSET, 1);
+    ath79_eth1_data.phy_if_mode = PHY_INTERFACE_MODE_GMII;
+    ath79_eth1_data.speed = SPEED_1000;
+    ath79_eth1_data.duplex = DUPLEX_FULL;
+    ath79_switch_data.phy_poll_mask |= BIT(4);
+    ath79_switch_data.phy4_mii_en = 1;
+    ath79_register_eth(1);
+
+    ath79_init_mac(tmpmac, art + GL_AR750_WMAC_CALDATA_OFFSET + 2, 0);
+    ath79_register_wmac(art + GL_AR750_WMAC_CALDATA_OFFSET, tmpmac);
+	/*register i2c*/
+	platform_device_register(&gl_ar750_i2c_gpio_device);
+    /* enable usb */
+    ath79_register_usb();
+    /* enable pci */
+    ath79_register_pci();
+}
+
+MIPS_MACHINE(ATH79_MACH_GL_AR750, "GL-AR750", "GL-AR750",
+         gl_ar750_setup);
--- a/target/linux/ar71xx/image/generic.mk
+++ b/target/linux/ar71xx/image/generic.mk
@@ -161,6 +161,17 @@ define Device/gl-ar300m
 endef
 TARGET_DEVICES += gl-ar300m
 
+define Device/gl-ar750
+  DEVICE_TITLE := GL.iNet GL-AR750
+  DEVICE_PACKAGES := kmod-ath10k ath10k-firmware-qca9887 kmod-usb-core \
+       kmod-usb2 kmod-usb-storage
+  BOARDNAME = GL-AR750
+  IMAGE_SIZE = 16000k
+  CONSOLE = ttyS0,115200
+  MTDPARTS = spi0.0:256k(u-boot)ro,64k(art)ro,64k(u-boot-env),16000k(firmware)
+endef
+TARGET_DEVICES += gl-ar750
+
 define Device/gl-domino
   DEVICE_TITLE := GL Domino Pi
   DEVICE_PACKAGES := kmod-usb-core kmod-usb2
--- a/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
+++ b/target/linux/ar71xx/files/arch/mips/ath79/machtypes.h
@@ -100,6 +100,7 @@ enum ath79_mach_type {
 	ATH79_MACH_GL_AR150,			/* GL-AR150 support */
 	ATH79_MACH_GL_AR300,			/* GL-AR300 */
 	ATH79_MACH_GL_AR300M,			/* GL-AR300M */
+	ATH79_MACH_GL_AR750,			/* GL-AR750 */
 	ATH79_MACH_GL_DOMINO,			/* Domino */
 	ATH79_MACH_GL_INET,			/* GL-CONNECT GL-INET */
 	ATH79_MACH_GL_MIFI,			/* GL-MIFI support */
--- /dev/null
+++ b/package/kernel/mac80211/patches/941-fix-ath10k-crashes.patch
@@ -0,0 +1,10 @@
+--- a/drivers/net/wireless/ath/ath10k/pci.c
++++ b/drivers/net/wireless/ath/ath10k/pci.c
+@@ -1923,7 +1923,6 @@ static int ath10k_pci_bmi_wait(struct at
+ 		if (xfer->tx_done && (xfer->rx_done == xfer->wait_for_resp))
+ 			return 0;
+ 
+-		schedule();
+ 	}
+ 
+ 	return -ETIMEDOUT;
